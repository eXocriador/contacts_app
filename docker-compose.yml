version: "3.8"

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: contacts_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: contacts_app
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./backend/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - contacts_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: contacts_backend
    restart: unless-stopped
    env_file: ./backend/.env
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD}@mongodb:27017/contacts_app?authSource=admin
      CORS_ORIGIN: http://localhost:3001,https://your-frontend-domain.com
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX: 100
    ports:
      - "3000:3000"
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/temp:/app/temp
    networks:
      - contacts_network
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: contacts_frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:3000
    ports:
      - "3001:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - contacts_network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:80/"
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development version (optional)
  backend_dev:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: builder
    container_name: contacts_backend_dev
    restart: unless-stopped
    env_file: ./backend/.env
    environment:
      NODE_ENV: development
      PORT: 3002
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD}@mongodb:27017/contacts_app?authSource=admin
      CORS_ORIGIN: http://localhost:5173
    ports:
      - "3002:3002"
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - contacts_network
    command: yarn dev
    profiles:
      - dev

  frontend_dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: builder
    container_name: contacts_frontend_dev
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:3002
    ports:
      - "5173:5173"
    depends_on:
      - backend_dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - contacts_network
    command: yarn dev --host
    profiles:
      - dev

volumes:
  mongodb_data:
    driver: local

networks:
  contacts_network:
    driver: bridge
